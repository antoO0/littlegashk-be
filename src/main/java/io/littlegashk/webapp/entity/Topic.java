package io.littlegashk.webapp.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import io.littlegashk.webapp.DynamoDbSchemaInitializer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import jdk.jfr.EventType;
import lombok.AccessLevel;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;
import net.minidev.json.annotate.JsonIgnore;
import org.springframework.data.annotation.Id;
import springfox.documentation.annotations.ApiIgnore;

import java.time.LocalDate;
import java.util.List;

@DynamoDBTable(tableName = DynamoDbSchemaInitializer.TABLE_LITTLEGAS)
@Data
public class Topic {

    @Id
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private TopicId id;

    @DynamoDBHashKey(attributeName = "pid")
    @DynamoDBIndexRangeKey(globalSecondaryIndexName = "group-index")
    @DynamoDBAutoGeneratedKey
    @ApiModelProperty(position = 0, notes = "Root topic id, progress under the same topic share the same topicId")
    public String getTopicId() {

        return id == null ? null : id.getId();
    }

    public void setTopicId(String id) {

        if (this.id == null) {
            this.id = new TopicId();
        }
        this.id.setId(id);
    }

    @DynamoDBRangeKey(attributeName = "sid")
    @ApiModelProperty(position = 1, notes = "Record id, root topic always equal to 'TOP'")
    public String getRecordId() {

        return id == null ? null : id.getRecordId();
    }

    public void setRecordId(String recordId) {

        if (this.id == null) {
            this.id = new TopicId();
        }
        this.id.setRecordId(recordId);
    }


    //Any progress topics should NOT have group
    @ApiModelProperty(hidden = true)
    @DynamoDBIndexHashKey(globalSecondaryIndexName = "group-index")
    private String group;


    // Arbitrary fields below, change as you want :)
    @ApiModelProperty(position = 2, example="This is topic/progress title")
    private String title;

    @ApiModelProperty(position = 3, example="This is summary")
    private String summary;

    @DynamoDbTypeConvertedLocalDate
    @ApiModelProperty(position = 4, example = "2019-07-21")
    private LocalDate eventDateTime;

    @DynamoDBTypeConvertedEnum
    @ApiModelProperty(position = 5, example="TOPIC", notes = "Not required when add or edit", allowableValues = "{TOPIC,PROGRESS,PUBLIC_RESPONSE}")
    private EntryType type;

    @DynamoDBTypeConvertedJson
    @ApiModelProperty(position = 6)
    private List<String> relatedFiles;

    @DynamoDBTypeConvertedJson
    @ApiModelProperty(position = 7)
    private List<String> relatedTopics;

    @DynamoDBTypeConvertedJson
    @ApiModelProperty(position = 8)
    private List<String> references;

    @DynamoDBTypeConvertedJson
    @ApiModelProperty(position = 9)
    private List<String> tags;
}
